c
n
c
n
c
short_url
n
url
n
 new_short.present? && short_url.present?
 if new_short.present? && short_url.present
 if new_short.present? && short_url.present?
n
short_url
short_ur
n
new_short
n
c
n
existing_url
n
short_url
n
short_url
c
Url.find_by(short_url: params[:short_url])
Url.find_by_short_url(params[:short_url])
existing_url
n
c
Url.find_by_short_url(params[:short_url])
n
c
Url.find_by_short_url(short_url)
short_url
Url.find_by_short_url(short_url)
existing_url
n
short_url
n
long_url
n
long_url
c
n
self.short_url
c
original_url
Digest::MD5.hexdigest(original_url)[0..7] # Adjust length as needed
c
sanitize
c
short_url
short_url = self.original_url.downcase.gsub(/(https?:\/\/)|(www\.)/,"")
      "http://#{short_url}"
short_url
"http://#{short_url}"
self.original_url.downcase.gsub(/(https?:\/\/)|(www\.)/,"")
self.original_url.downcase
  original_url.strip
  original_url.strip!
original_url
original_url.strip!
c
@user
@user.save
@user.original_url
@user.sanitize
@user.short_url 
@user.generate_short_url
@user
